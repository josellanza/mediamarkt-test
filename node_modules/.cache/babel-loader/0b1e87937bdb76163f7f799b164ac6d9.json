{"ast":null,"code":"var _jsxFileName = \"/home/jose/curro/mediamarkt-test/src/home/home.container.tsx\",\n    _s = $RefreshSig$();\n\nimport HomeView from \"./home.view\";\nimport { useState, useEffect } from 'react';\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  _s();\n\n  const [products, setProducts] = useState([]);\n  const [responseError, setResponseError] = useState(false);\n\n  const buildProducts = () => {\n    fetch('products.json', {\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      }\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error(\"HTTP error \" + response.status);\n      }\n\n      return response.json();\n    }).then(data => {\n      setProducts(data);\n    }).catch(function () {\n      setResponseError(true);\n    });\n  };\n\n  const handleSearch = value => {\n    if (!value) {\n      return buildProducts();\n    }\n\n    const newProducts = products.filter(a => a.name.includes(value));\n    setProducts(newProducts);\n  };\n\n  useEffect(() => {\n    buildProducts();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(HomeView, {\n    products: products,\n    handleSearch: handleSearch\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 10\n  }, this);\n};\n\n_s(Home, \"H7LHcKSWVuNFcEa17bAVR3iyAGA=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/home/jose/curro/mediamarkt-test/src/home/home.container.tsx"],"names":["HomeView","useState","useEffect","React","Home","products","setProducts","responseError","setResponseError","buildProducts","fetch","headers","then","response","ok","Error","status","json","data","catch","handleSearch","value","newProducts","filter","a","name","includes"],"mappings":";;;AAAA,OAAOA,QAAP,MAAqB,aAArB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAOA,MAAMC,IAAI,GAAI,MAAM;AAAA;;AAClB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAkB,EAAlB,CAAxC;AACA,QAAM,CAACM,aAAD,EAAgBC,gBAAhB,IAAoCP,QAAQ,CAAU,KAAV,CAAlD;;AAEA,QAAMQ,aAAa,GAAG,MAAM;AAC1BC,IAAAA,KAAK,CAAC,eAAD,EAAkB;AACrBC,MAAAA,OAAO,EAAG;AACR,wBAAgB,kBADR;AAER,kBAAU;AAFF;AADW,KAAlB,CAAL,CAOCC,IAPD,CAOMC,QAAQ,IAAI;AACd,UAAI,CAACA,QAAQ,CAACC,EAAd,EAAkB;AACd,cAAM,IAAIC,KAAJ,CAAU,gBAAgBF,QAAQ,CAACG,MAAnC,CAAN;AACH;;AACD,aAAOH,QAAQ,CAACI,IAAT,EAAP;AACH,KAZD,EAaCL,IAbD,CAaMM,IAAI,IAAI;AACZZ,MAAAA,WAAW,CAACY,IAAD,CAAX;AACD,KAfD,EAgBCC,KAhBD,CAgBO,YAAY;AACjBX,MAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACD,KAlBD;AAmBD,GApBD;;AAsBA,QAAMY,YAAY,GAAIC,KAAD,IAA0B;AAC7C,QAAI,CAACA,KAAL,EAAY;AACV,aAAOZ,aAAa,EAApB;AACD;;AAED,UAAMa,WAAW,GAAGjB,QAAQ,CAACkB,MAAT,CAAgBC,CAAC,IAAIA,CAAC,CAACC,IAAF,CAAOC,QAAP,CAAgBL,KAAhB,CAArB,CAApB;AACAf,IAAAA,WAAW,CAACgB,WAAD,CAAX;AACD,GAPD;;AASApB,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,aAAa;AACd,GAFQ,EAEN,EAFM,CAAT;AAIA,sBAAO,QAAC,QAAD;AAAU,IAAA,QAAQ,EAAEJ,QAApB;AAA8B,IAAA,YAAY,EAAEe;AAA5C;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAxCD;;GAAMhB,I;;KAAAA,I;AA0CN,eAAeA,IAAf","sourcesContent":["import HomeView from \"./home.view\";\nimport { useState, useEffect } from 'react';\nimport React from 'react';\nimport Products from '../interface';\n\ninterface ProductsProps {\n  products: Products[];\n}\n\nconst Home  = () => {\n  const [products, setProducts] = useState<ProductsProps[]>([]);\n  const [responseError, setResponseError] = useState<boolean>(false);\n\n  const buildProducts = () => {\n    fetch('products.json', {\n      headers : { \n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n       }\n    }\n  )\n    .then(response => {\n        if (!response.ok) {\n            throw new Error(\"HTTP error \" + response.status);\n        }\n        return response.json();\n    })\n    .then(data => {\n      setProducts(data);\n    })\n    .catch(function () {\n      setResponseError(true);\n    })\n  }\n\n  const handleSearch = (value: string | null) => {\n    if (!value) {\n      return buildProducts();\n    }\n\n    const newProducts = products.filter(a => a.name.includes(value));\n    setProducts(newProducts);\n  }\n\n  useEffect(() => {\n    buildProducts();\n  }, []);\n\n  return <HomeView products={products} handleSearch={handleSearch} />;\n}\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}